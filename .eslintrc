{
    "root": true,
    "env": {
        "jest/globals": true
    },
    "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
    "parserOptions": {
        "ecmaVersion": "latest", // Allows for the parsing of modern ECMAScript features
        "sourceType": "module", // Allows for the use of imports
        "ecmaFeatures": {
            "jsx": true // Allows for the parsing of JSX
        },

        "tsconfigRootDir": ".",
        "project": ["./tsconfig.eslint.json", "./packages/**/tsconfig.test.json"]
    },
    "settings": {
        "react": {
            "version": "detect" // Tells eslint-plugin-react to automatically detect the version of React to use
        },
        "import/resolver": {
            "typescript": {}
        }
    },
    "extends": [
        "plugin:@cspell/recommended",
        "eslint:recommended",
        "plugin:import/recommended",
        "plugin:import/typescript",
        "plugin:promise/recommended",
        "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
        "plugin:react-hooks/recommended",
        "plugin:react/jsx-runtime",
        "plugin:jest/style",
        "plugin:prettier/recommended", // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
        "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
        "prettier"
    ],
    "plugins": ["simple-import-sort", "prettier", "@typescript-eslint", "jest"],
    "overrides": [
        {
            "files": ["**/*.tsx"],
            "rules": {
                "react/display-name": "off",
                "react/prop-types": "off"
            }
        },
        {
            "files": "*",
            "rules": {
                "prettier/prettier": "error",
                "simple-import-sort/imports": [
                    "error",
                    {
                        "groups": [
                            // Node.js builtins. You could also generate this regex if you use a `.js` config.
                            // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
                            [
                                "^(assert|buffer|child_process|cluster|console|constants|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
                            ],
                            // React
                            ["^react$"],
                            // Packages
                            ["^@?\\w"],
                            // Packages with @
                            ["^(@)(/.*|$)"],
                            // Side effect imports.
                            ["^\\u0000"],
                            // Parent imports. Put `..` last.
                            ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
                            // Other relative imports. Put same-folder imports and `.` last.
                            ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"]
                        ]
                    }
                ],
                "simple-import-sort/exports": "error"
            }
        },
        {
            "files": "packages/contentful/src/defaultResponses/index.ts",
            "rules": {
                "@cspell/spellchecker": "off"
            }
        }
    ],
    "rules": {
        "@typescript-eslint/no-unused-vars": [
            "error",
            {
                "ignoreRestSiblings": true,
                "argsIgnorePattern": "^_"
            }
        ],
        "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
        "react-hooks/exhaustive-deps": "warn",
        "@cspell/spellchecker": [
            "warn", 
            { 
                "checkComments": false, 
                "ignoreImports": true, 
                "ignoreImportProperties": true,
                "customWordListFile": "cspell.txt" 
            }
        ]
    }
}
